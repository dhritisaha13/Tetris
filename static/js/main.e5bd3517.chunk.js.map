{"version":3,"sources":["img/bg.png","gameHelpers.js","components/styles/StyledDisplay.js","components/Display.js","components/styles/StyledCell.js","tetrominos.js","components/Cell.js","components/styles/StyledStage.js","components/Stage.js","components/styles/StyledStartButton.js","components/StartButton.js","components/styles/StyledTetris.js","hooks/useStage.js","hooks/useGameStatus.js","components/Tetris.js","hooks/usePlayer.js","hooks/useInterval.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","createStage","Array","from","fill","checkCollision","player","stage","moveX","x","moveY","y","tetromino","length","pos","StyledDisplay","styled","div","props","gameOver","Display","text","StyledCell","color","type","TETROMINOS","0","shape","I","J","L","O","S","T","Z","randomTetromino","randTetromino","Math","floor","random","React","memo","console","log","StyledStage","height","width","Stage","map","row","cell","key","StyledStartButton","button","StartButton","callback","onClick","StyledTetrisWrapper","bgImage","StyledTetris","useStage","resetPlayer","useState","setStage","rowsCleared","setRowsCleared","useEffect","updateStage","prevStage","newStage","forEach","value","collided","reduce","ack","findIndex","prev","unshift","push","sweepRows","Tetris","dropTime","setDropTime","setGameOver","setPlayer","rotate","matrix","dir","rotatedTetro","_","index","col","reverse","useCallback","STAGE_WIDTH","clonedPlayer","JSON","parse","stringify","offset","usePlayer","updatePlayerPos","playerRotate","score","setScore","rows","setRows","level","setLevel","linePoints","calcScore","useGameStatus","movePlayer","drop","delay","savedCallback","useRef","current","id","setInterval","clearInterval","useInterval","move","keyCode","role","tabIndex","onKeyDown","e","onKeyUp","App","className","href","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"oGAAAA,EAAOC,QAAU,IAA0B,gC,mJCG9BC,EAAc,kBAC1BC,MAAMC,KAAKD,MAHgB,KAGK,kBAC/B,IAAIA,MALqB,IAKFE,KAAK,CAAC,EAAG,cAGrBC,EAAiB,SAACC,EAAQC,EAAT,GAC7B,IADwE,IAAtBC,EAAqB,EAAxBC,EAAaC,EAAW,EAAdC,EACjDA,EAAI,EAAGA,EAAIL,EAAOM,UAAUC,OAAQF,GAAK,EAChD,IAAI,IAAIF,EAAI,EAAGA,EAAIH,EAAOM,UAAUD,GAAGE,OAAQJ,GAAK,EACnD,GAA8B,IAA3BH,EAAOM,UAAUD,GAAGF,MAClBF,EAAMI,EAAIL,EAAOQ,IAAIH,EAAID,KAC3BH,EAAMI,EAAIL,EAAOQ,IAAIH,EAAID,GAAOD,EAAIH,EAAOQ,IAAIL,EAAID,IAEnD,UADDD,EAAMI,EAAIL,EAAOQ,IAAIH,EAAID,GAAOD,EAAIH,EAAOQ,IAAIL,EAAID,GAAO,IAE1D,OAAO,EAMX,OAAO,G,0YCpBD,IAAMO,EAAgBC,IAAOC,IAAV,KAUhB,SAAAC,GAAK,OAAKA,EAAMC,SAAW,MAAQ,UCL9BC,EAJC,SAAC,GAAD,IAAGD,EAAH,EAAGA,SAAUE,EAAb,EAAaA,KAAb,OACf,kBAACN,EAAD,CAAeI,SAAYA,GAAWE,I,4RCFhC,IAAMC,EAAaN,IAAOC,IAAV,KAEH,SAAAC,GAAK,OAAIA,EAAMK,SACxB,SAAAL,GAAK,OAAoB,IAAfA,EAAMM,KAAa,YAAc,eACzB,SAAAN,GAAK,OAAIA,EAAMK,SAChB,SAAAL,GAAK,OAAIA,EAAMK,SACjB,SAAAL,GAAK,OAAIA,EAAMK,SACd,SAAAL,GAAK,OAAIA,EAAMK,SCT7BE,EAAa,CACzBC,EAAG,CAAEC,MAAO,CAAC,CAAC,IAAKJ,MAAO,WAC1BK,EAAG,CACFD,MAAO,CACH,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,GACZ,CAAC,EAAG,IAAK,EAAG,IAEhBJ,MAAO,gBAERM,EAAG,CACFF,MAAO,CACH,CAAC,EAAG,IAAK,GACT,CAAC,EAAG,IAAK,GACT,CAAC,IAAK,IAAK,IAEfJ,MAAO,eAERO,EAAG,CACFH,MAAO,CACH,CAAC,EAAG,IAAK,GACT,CAAC,EAAG,IAAK,GACT,CAAC,EAAG,IAAK,MAEbJ,MAAO,gBAERQ,EAAG,CACFJ,MAAO,CACH,CAAC,IAAK,KACN,CAAC,IAAK,MAEVJ,MAAO,gBAERS,EAAG,CACFL,MAAO,CACH,CAAC,EAAG,IAAK,KACT,CAAC,IAAK,IAAK,GACX,CAAC,EAAG,EAAG,IAEXJ,MAAO,eAERU,EAAG,CACFN,MAAO,CACH,CAAC,EAAG,EAAG,GACP,CAAC,IAAK,IAAK,KACX,CAAC,EAAG,IAAK,IAEbJ,MAAO,gBAERW,EAAG,CACFP,MAAO,CACH,CAAC,IAAK,IAAK,GACX,CAAC,EAAG,IAAK,KACT,CAAC,EAAG,EAAG,IAEXJ,MAAO,gBAKIY,EAAkB,WAC9B,IACMC,EADa,UACcC,KAAKC,MAAMD,KAAKE,SAD9B,UACoD1B,SACvE,OAAOY,EAAWW,ICtDJI,MAAMC,MANR,SAAC,GAAD,IAAGjB,EAAH,EAAGA,KAAH,OACZ,kBAACF,EAAD,CAAYE,KAAQA,EAAMD,MAASE,EAAWD,GAAMD,OAClDmB,QAAQC,IAAI,qB,gTCJR,IAAMC,EAAc5B,IAAOC,IAAV,KAGpB,SAAAC,GAAK,OAAIA,EAAM2B,UACH,SAAA3B,GAAK,OAAIA,EAAM4B,SAEE,SAAA5B,GAAK,OAAIA,EAAM4B,SCEjCC,EAND,SAAC,GAAD,IAAGxC,EAAH,EAAGA,MAAH,OACb,kBAACqC,EAAD,CAAaE,MAASvC,EAAM,GAAGM,OAAQgC,OAAUtC,EAAMM,QACrDN,EAAMyC,KAAI,SAAAC,GAAG,OAAIA,EAAID,KAAI,SAACE,EAAMzC,GAAP,OAAa,kBAAC,EAAD,CAAM0C,IAAO1C,EAAGe,KAAQ0B,EAAK,a,6WCJ/D,IAAME,EAAoBpC,IAAOqC,OAAV,KCKfC,EAJK,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACnB,kBAACH,EAAD,CAAmBI,QAAWD,GAA9B,e,ieCDM,IAAME,EAAsBzC,IAAOC,IAAV,IAGbyC,KAKNC,EAAe3C,IAAOC,IAAV,K,OCRZ2C,EAAW,SAACtD,EAAQuD,GAAiB,IAAD,EACtBC,mBAAS7D,KADa,mBACzCM,EADyC,KAClCwD,EADkC,OAEVD,mBAAS,GAFC,mBAEzCE,EAFyC,KAE5BC,EAF4B,KAqDhD,OAjDAC,qBAAU,WACTD,EAAe,GACZ,IAWGE,EAAc,SAAAC,GAEf,IAAMC,EAAWD,EAAUpB,KAAI,SAAAC,GAAG,OAChCA,EAAID,KAAI,SAAAE,GAAI,MAAiB,UAAZA,EAAK,GAAiB,CAAC,EAAG,SAAWA,QAexD,OAXA5C,EAAOM,UAAU0D,SAAQ,SAACrB,EAAKtC,GAC7BsC,EAAIqB,SAAQ,SAACC,EAAO9D,GACJ,IAAV8D,IACFF,EAAS1D,EAAIL,EAAOQ,IAAIH,GAAGF,EAAIH,EAAOQ,IAAIL,GAAK,CAC7C8D,EAD6C,UAE1CjE,EAAOkE,SAAW,SAAW,iBAMpClE,EAAOkE,UACTX,IA9Bc,SAAAQ,GAAQ,OACxBA,EAASI,QAAO,SAACC,EAAKzB,GACpB,OAA8C,IAA1CA,EAAI0B,WAAU,SAAAzB,GAAI,OAAgB,IAAZA,EAAK,OAC7Be,GAAe,SAAAW,GAAI,OAAIA,EAAO,KAC9BF,EAAIG,QAAQ,IAAI3E,MAAMmE,EAAS,GAAGxD,QAAQT,KAAK,CAAC,EAAG,WAC5CsE,IAETA,EAAII,KAAK7B,GACFyB,KACN,IAsBMK,CAAUV,IAEZA,GAIZN,GAAS,SAAAa,GAAI,OAAIT,EAAYS,QAC3B,CACFtE,EAAOkE,SACJlE,EAAOQ,IAAIL,EACXH,EAAOQ,IAAIH,EACXL,EAAOM,UACPiD,IAIG,CAACtD,EAAOwD,EAAUC,ICtDnB,ICwHQgB,EAzGA,WAAO,IAAD,EACYlB,mBAAS,MADrB,mBACbmB,EADa,KACHC,EADG,OAEYpB,oBAAS,GAFrB,mBAEb3C,EAFa,KAEHgE,EAFG,OCbI,WAAO,IAAD,EACFrB,mBAAS,CACpChD,IAAK,CAAEL,EAAE,EAAGE,EAAE,GACdC,UAAWa,EAAW,GAAGE,MACzB6C,UAAU,IAJmB,mBACvBlE,EADuB,KACf8E,EADe,KAOxBC,EAAS,SAACC,EAAQC,GACpB,IAAMC,EAAeF,EAAOtC,KAAI,SAACyC,EAAGC,GAAJ,OAC/BJ,EAAOtC,KAAI,SAAA2C,GAAG,OAAIA,EAAID,SAGvB,OAAIH,EAAM,EAAUC,EAAaxC,KAAI,SAAAC,GAAG,OAAIA,EAAI2C,aACzCJ,EAAaI,WA+BlB/B,EAAcgC,uBAAY,WAC/BT,EAAU,CACTtE,IAAK,CAAEL,EAAGqF,EAAqBnF,EAAG,GAClCC,UAAWuB,IAAkBR,MAC7B6C,UAAU,MAET,IAEH,MAAO,CAAClE,EAhBgB,SAAC,GAAuB,IAArBG,EAAoB,EAApBA,EAAGE,EAAiB,EAAjBA,EAAG6D,EAAc,EAAdA,SAChCY,GAAU,SAAAR,GAAI,kCACVA,GADU,IAEb9D,IAAK,CAAEL,EAAImE,EAAK9D,IAAIL,GAAKA,EAAIE,EAAIiE,EAAK9D,IAAIH,GAAKA,GAC/C6D,iBAY+BX,EApCZ,SAACtD,EAAOgF,GAC5B,IAAMQ,EAAeC,KAAKC,MAAMD,KAAKE,UAAU5F,IAC5CyF,EAAanF,UAAYyE,EAAOU,EAAanF,UAAW2E,GAIxD,IAFA,IAAMzE,EAAMiF,EAAajF,IAAIL,EACzB0F,EAAS,EACN9F,EAAe0F,EAAcxF,EAAO,CAAEE,EAAG,EAAGE,EAAG,KAGpD,GAFAoF,EAAajF,IAAIL,GAAK0F,GACtBA,IAAWA,GAAUA,EAAS,EAAI,GAAK,KAC1BJ,EAAanF,UAAU,GAAGC,OAGrC,OAFAwE,EAAOU,EAAanF,WAAY2E,QAChCQ,EAAajF,IAAIL,EAAIK,GAKzBsE,EAAUW,KDf+CK,GAJzC,mBAIb9F,EAJa,KAIL+F,EAJK,KAIYxC,EAJZ,KAIyByC,EAJzB,OAKmB1C,EAAStD,EAAQuD,GALpC,mBAKbtD,EALa,KAKNwD,EALM,ODfQ,SAAAC,GAAgB,IAAD,EAChBF,mBAAS,GADO,mBACnCyC,EADmC,KAC5BC,EAD4B,OAElB1C,mBAAS,GAFS,mBAEnC2C,EAFmC,KAE7BC,EAF6B,OAGhB5C,mBAAS,GAHO,mBAGnC6C,EAHmC,KAG5BC,EAH4B,KAKpCC,EAAa,CAAC,GAAI,IAAK,IAAK,MAE5BC,EAAYjB,uBAAY,WACxB7B,EAAc,IAChBwC,GAAS,SAAA5B,GAAI,OAAIA,EAAOiC,EAAW7C,EAAc,IAAM2C,EAAQ,MAC/DD,GAAQ,SAAA9B,GAAI,OAAIA,EAAOZ,QAExB,CAAC2C,EAAOE,EAAY7C,IAMvB,OAJAE,qBAAU,WACR4C,MACC,CAACA,EAAW9C,EAAauC,IAErB,CAACA,EAAOC,EAAUC,EAAMC,EAASC,EAAOC,GCGUG,CANtC,yBAMbR,EANa,KAMNC,EANM,KAMIC,EANJ,KAMUC,EANV,KAMmBC,EANnB,KAM0BC,EAN1B,KAQlBlE,QAAQC,IAAI,aAGd,IAAMqE,EAAa,SAAAzB,GACdlF,EAAeC,EAAQC,EAAO,CAAEE,EAAG8E,EAAK5E,EAAG,KAC9C0F,EAAgB,CAAE5F,EAAG8E,EAAK5E,EAAG,KAwBzBsG,EAAO,WACRR,EAAqB,IAAbE,EAAQ,KACfC,GAAS,SAAAhC,GAAI,OAAIA,EAAO,KACxBM,EAAY,KAAQyB,EAAQ,GAAK,MAGlCtG,EAAeC,EAAQC,EAAO,CAAEE,EAAG,EAAGE,EAAG,KAGzCL,EAAOQ,IAAIH,EAAI,IACjB+B,QAAQC,IAAI,cACZwC,GAAY,GACZD,EAAY,OAEbmB,EAAgB,CAAE5F,EAAG,EAAGE,EAAG,EAAG6D,UAAU,KAPxC6B,EAAgB,CAAE5F,EAAG,EAAGE,EAAG,EAAG6D,UAAU,ME3DpC,SAAqBjB,EAAU2D,GACpC,IAAMC,EAAgBC,mBAEtBlD,qBAAU,WACRiD,EAAcE,QAAU9D,IACvB,CAACA,IAGJW,qBAAU,WAIR,GAAc,OAAVgD,EAAgB,CAClB,IAAMI,EAAKC,aAJb,WACEJ,EAAcE,YAGeH,GAC7B,OAAO,WACLM,cAAcF,OAGjB,CAACJ,IFyDLO,EAAY,WACRR,MACChC,GAEL,IAAMyC,EAAO,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACXxG,IACY,KAAZwG,EACFX,GAAY,GACQ,KAAZW,EACRX,EAAW,GACS,KAAZW,GAdVzC,EAAY,MACZ+B,KAesB,KAAZU,GACRrB,EAAa/F,EAAO,KAMvB,OACC,kBAACkD,EAAD,CACCmE,KAAO,SACPC,SAAW,IACXC,UAAa,SAAAC,GAAC,OAAIL,EAAKK,IACvBC,QAnEY,SAAC,GAAiB,IAAfL,EAAc,EAAdA,QACRxG,GAEa,KAAZwG,GACFzC,EAAY,KAAQyB,EAAQ,GAAK,OAiEvC,kBAAChD,EAAD,KACC,kBAAC,EAAD,CAAOpD,MAASA,IAChB,+BACIY,EACA,kBAAC,EAAD,CAASA,SAAWA,EAAUE,KAAM,cAEtC,6BACC,kBAAC,EAAD,CAASA,KAAI,iBAAckF,KAC3B,kBAAC,EAAD,CAASlF,KAAI,gBAAaoF,KAC1B,kBAAC,EAAD,CAASpF,KAAI,iBAAcsF,MAG7B,kBAAC,EAAD,CAAapD,SAxEC,WAEjBQ,EAAS9D,KACTiF,EAAY,KACZrB,IACA2C,EAAS,GACNI,EAAS,GACTF,EAAQ,GACXvB,GAAY,UGvCC8C,EATH,kBACV,yBAAKC,UAAY,OAChB,4BAAI,4DACJ,4BAAI,+CAAoB,uBAAGC,KAAO,kCAAV,iBACvB,kBAAC,EAAD,QCKgBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL3G,QAAQ2G,MAAMA,EAAMC,c","file":"static/js/main.e5bd3517.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg.2810fe6b.png\";","export const STAGE_WIDTH = 12;\r\nexport const STAGE_HEIGHT = 20;\r\n\r\nexport const createStage = () =>\r\n\tArray.from(Array(STAGE_HEIGHT), () =>\r\n\t\tnew Array(STAGE_WIDTH).fill([0, 'clear'])\r\n\t);\r\n\r\nexport const checkCollision = (player, stage, { x: moveX, y: moveY}) => {\r\n\tfor(let y = 0; y < player.tetromino.length; y += 1){\r\n\t\tfor(let x = 0; x < player.tetromino[y].length; x += 1){\r\n\t\t\tif(player.tetromino[y][x] !== 0){\r\n\t\t\t\tif(!stage[y + player.pos.y + moveY] || \r\n\t\t\t\t\t!stage[y + player.pos.y + moveY][x + player.pos.x + moveX] || \r\n\t\t\t\t\tstage[y + player.pos.y + moveY][x + player.pos.x + moveX][1] !==\r\n\t\t\t\t\t 'clear'){\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn false;\r\n};\t","import styled from 'styled-components';\r\n\r\nexport const StyledDisplay = styled.div`\r\n\tbox-sizing: border-box;\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tmargin: 0 0 20px 0;\r\n\tpadding: 20px;\r\n\tborder: 4px solid #333;\r\n\tmin-height: 30px;\r\n\twidth: 100%;\r\n\tborder-radius: 20px;\r\n\tcolor: ${props => (props.gameOver ? 'red' : '#999')};\r\n\tbackground: #000;\r\n\tfont-family: Pixel, Arial, Helvetica, sans-serif;\r\n\tfont-size: 0.8rem;\r\n`;","import React from 'react';\r\nimport { StyledDisplay } from './styles/StyledDisplay.js';\r\n\r\nconst Display = ({ gameOver, text}) => (\r\n\t<StyledDisplay gameOver = {gameOver}>{text}</StyledDisplay>\r\n);\r\n\r\nexport default Display;","import styled from 'styled-components';\r\n\r\nexport const StyledCell = styled.div`\r\n\twidth: auto;\r\n\tbackground: rgba(${props => props.color}, 0.8);\r\n\tborder: ${props => (props.type === 0 ? '0px solid' : '4px solid')};\r\n\tborder-bottom-color: rgba(${props => props.color}, 0.1);\r\n\tborder-right-color: rgba(${props => props.color}, 1);\r\n\tborder-top-color: rgba(${props => props.color}, 1);\r\n\tborder-left-color: rgba(${props => props.color}, 0.3);\r\n`","export const TETROMINOS = {\r\n\t0: { shape: [[0]], color: '0, 0, 0' },\r\n\tI: {\r\n\t\tshape: [\r\n\t\t\t\t  [0, 'I', 0, 0],\r\n\t\t\t\t  [0, 'I', 0, 0],\r\n\t\t\t\t  [0, 'I', 0, 0],\r\n\t\t\t\t  [0, 'I', 0 ,0]\r\n\t\t\t\t],\r\n\t\tcolor: '80, 227, 230',\r\n\t},\r\n\tJ: {\r\n\t\tshape: [\r\n\t\t\t\t  [0, 'J', 0],\r\n\t\t\t\t  [0, 'J', 0],\r\n\t\t\t\t  ['J', 'J', 0]\r\n\t\t\t\t],\r\n\t\tcolor: '36, 95, 223',\r\n\t},\r\n\tL: {\r\n\t\tshape: [\r\n\t\t\t\t  [0, 'L', 0],\r\n\t\t\t\t  [0, 'L', 0],\r\n\t\t\t\t  [0, 'L', 'L']\r\n\t\t\t\t],\r\n\t\tcolor: '223, 173, 36',\r\n\t},\r\n\tO: {\r\n\t\tshape: [\r\n\t\t\t\t  ['O', 'O'],\r\n\t\t\t\t  ['O', 'O']\r\n\t\t\t\t],\r\n\t\tcolor: '223, 217, 36',\r\n\t},\r\n\tS: {\r\n\t\tshape: [\r\n\t\t\t\t  [0, 'S', 'S'],\r\n\t\t\t\t  ['S', 'S', 0],\r\n\t\t\t\t  [0, 0, 0]\r\n\t\t\t\t],\r\n\t\tcolor: '48, 211, 56',\r\n\t},\r\n\tT: {\r\n\t\tshape: [\r\n\t\t\t\t  [0, 0, 0],\r\n\t\t\t\t  ['T', 'T', 'T'],\r\n\t\t\t\t  [0, 'T', 0]\r\n\t\t\t\t],\r\n\t\tcolor: '132, 61, 198',\r\n\t},\r\n\tZ: {\r\n\t\tshape: [\r\n\t\t\t\t  ['Z', 'Z', 0],\r\n\t\t\t\t  [0, 'Z', 'Z'],\r\n\t\t\t\t  [0, 0, 0]\r\n\t\t\t\t],\r\n\t\tcolor: '227, 78, 78',\r\n\t},\r\n\r\n};\r\n\r\nexport const randomTetromino = () => {\r\n\tconst tetrominos = 'IJLOSTZ';\r\n\tconst randTetromino = tetrominos[Math.floor(Math.random() * tetrominos.length)];\r\n\treturn TETROMINOS[randTetromino];\r\n};","import React from 'react';\r\nimport { StyledCell } from './styles/StyledCell.js';\r\nimport { TETROMINOS } from '../tetrominos.js';\r\n\r\nconst Cell = ({ type }) => (\r\n\t<StyledCell type = {type} color = {TETROMINOS[type].color}>\r\n\t\t{console.log('rerender cell')}\r\n\t</StyledCell>\t\r\n);\r\n\r\nexport default React.memo(Cell);","import styled from 'styled-components';\r\n\r\nexport const StyledStage = styled.div`\r\n\tdisplay: grid;\r\n\tgrid-template-rows: repeat(\r\n\t\t${props => props.height},\r\n\t\tcalc(25vw / ${props => props.width})\r\n\t);\r\n\tgrid-template-columns: repeat(${props => props.width}, 1fr);\r\n\tgrid-gap: 1px;\r\n\tborder: 2px solid #333;\r\n\twidth: 100%;\r\n\tmax-width: 25vw;\r\n\tbackground: #111;\r\n`;","import React from 'react';\r\nimport Cell from './Cell.js';\r\nimport { StyledStage } from './styles/StyledStage.js';\r\n\r\nconst Stage = ({ stage }) => (\r\n\t<StyledStage width = {stage[0].length} height = {stage.length}>\r\n\t\t{stage.map(row => row.map((cell, x) => <Cell key = {x} type = {cell[0]} />))}\r\n\t</StyledStage>\r\n);\r\n\r\nexport default Stage;","import styled from 'styled-components';\r\n\r\nexport const StyledStartButton = styled.button`\r\n\tbox-sizing: border-box;\r\n\tmargin: 0 0 20px 0;\r\n\tpadding: 20px;\r\n\tmin-height: 30px;\r\n\twidth: 100%;\r\n\tborder-radius: 20px;\r\n\tborder: none;\r\n\tcolor:white;\r\n\tbackground: #333;\r\n\tfont-family: Pixel, Arial, Helvetica, sans-serif;\r\n\tfont-size: 1rem;\r\n\toutline: none;\r\n\tcursor: pointer;\r\n`;","import React from 'react';\r\nimport { StyledStartButton } from './styles/StyledStartButton.js';\r\n\r\nconst StartButton = ({ callback }) => (\r\n\t<StyledStartButton onClick = {callback}>Start Game</StyledStartButton>\r\n);\r\n\r\nexport default StartButton;","import styled from 'styled-components';\r\nimport bgImage from '../../img/bg.png';\r\n\r\nexport const StyledTetrisWrapper = styled.div`\r\n\twidth: 100vw;\r\n\theight: 100vh;\r\n\tbackground: url(${bgImage}) #000;\r\n\tbackground-size: cover;\r\n\toverflow: hidden;\r\n`\r\n\r\nexport const StyledTetris = styled.div`\r\n\tdisplay: flex;\r\n\talign-items: flex-start;\r\n\tpadding: 40px;\r\n\tmargin: 0 auto;\r\n\tmax-width: 900px;\r\n\r\n\taside{\r\n\t\twidth: 100%;\r\n\t\tmax-width: 200px;\r\n\t\tdisplay: block;\r\n\t\tpadding: 0 20px;\r\n\t}\r\n\t\r\n`","import { useState, useEffect } from 'react';\r\nimport { createStage } from '../gameHelpers.js';\r\n\r\nexport const useStage = (player, resetPlayer) => {\r\n\tconst [stage, setStage] = useState(createStage());\r\n\tconst [rowsCleared, setRowsCleared] = useState(0);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetRowsCleared(0);\r\n\t    const sweepRows = newStage =>\r\n\t      newStage.reduce((ack, row) => {\r\n\t        if (row.findIndex(cell => cell[0] === 0) === -1) {\r\n\t          setRowsCleared(prev => prev + 1);\r\n\t          ack.unshift(new Array(newStage[0].length).fill([0, 'clear']));\r\n\t          return ack;\r\n\t        }\r\n\t        ack.push(row);\r\n\t        return ack;\r\n\t      }, []);\r\n\r\n\t\tconst updateStage = prevStage => {\r\n\t      // First flush the stage\r\n\t      const newStage = prevStage.map(row =>\r\n\t        row.map(cell => (cell[1] === 'clear' ? [0, 'clear'] : cell))\r\n\t      );\r\n\r\n\t      // Then draw the tetromino\r\n\t      player.tetromino.forEach((row, y) => {\r\n\t        row.forEach((value, x) => {\r\n\t          if (value !== 0) {\r\n\t            newStage[y + player.pos.y][x + player.pos.x] = [\r\n\t              value,\r\n\t              `${player.collided ? 'merged' : 'clear'}`,\r\n\t            ];\r\n\t          }\r\n\t        });\r\n\t      });\r\n\t      // Then check if we got some score if collided\r\n\t      if (player.collided) {\r\n\t        resetPlayer();\r\n\t        return sweepRows(newStage);\r\n\t      }\r\n\t      return newStage;\r\n\t    };  \r\n\r\n\r\n\t\tsetStage(prev => updateStage(prev));\r\n\t}, [\r\n\t\tplayer.collided,\r\n\t    player.pos.x,\r\n\t    player.pos.y,\r\n\t    player.tetromino,\r\n\t    resetPlayer,\r\n    ]);\r\n\r\n\r\n\treturn [stage, setStage, rowsCleared];\r\n};","import { useState, useEffect, useCallback } from 'react';\r\n\r\nexport const useGameStatus = rowsCleared => {\r\n  const [score, setScore] = useState(0);\r\n  const [rows, setRows] = useState(0);\r\n  const [level, setLevel] = useState(0);\r\n\r\n  const linePoints = [40, 100, 300, 1200];\r\n\r\n  const calcScore = useCallback(() => {\r\n    if (rowsCleared > 0) {\r\n      setScore(prev => prev + linePoints[rowsCleared - 1] * (level + 1));\r\n      setRows(prev => prev + rowsCleared);\r\n    }\r\n  }, [level, linePoints, rowsCleared]);\r\n\r\n  useEffect(() => {\r\n    calcScore();\r\n  }, [calcScore, rowsCleared, score]);\r\n\r\n  return [score, setScore, rows, setRows, level, setLevel];\r\n};","import React, { useState } from 'react';\r\nimport { createStage, checkCollision } from '../gameHelpers.js';\r\n\r\n//Components\r\nimport Display from './Display.js';\r\nimport Stage from './Stage.js';\r\nimport StartButton from './StartButton.js';\r\n\r\n//Styled Components\r\nimport { StyledTetrisWrapper, StyledTetris} from './styles/StyledTetris.js';\r\n\r\n//Custom Hooks\r\nimport { usePlayer } from '../hooks/usePlayer.js';\r\nimport { useStage } from '../hooks/useStage.js';\r\nimport { useInterval } from '../hooks/useInterval.js';\r\nimport { useGameStatus } from '../hooks/useGameStatus.js';\r\n\r\nconst Tetris = () => {\r\n\tconst [dropTime, setDropTime] = useState(null);\r\n\tconst [gameOver, setGameOver] = useState(false);\r\n\r\n\tconst [player, updatePlayerPos, resetPlayer, playerRotate] = usePlayer();\r\n\tconst [stage, setStage, rowsCleared] = useStage(player, resetPlayer);\r\n\tconst [score, setScore, rows, setRows, level, setLevel] = useGameStatus(rowsCleared);\r\n\r\n  \tconsole.log('re-render');\r\n\r\n\r\n\tconst movePlayer = dir => {\r\n\t\tif(!checkCollision(player, stage, { x: dir, y: 0})){\r\n\t\t\tupdatePlayerPos({ x: dir, y: 0 });\r\n\t\t}\r\n\t};\r\n\t\t\r\n\tconst keyUp = ({ keyCode }) => {\r\n\t    if (!gameOver) {\r\n\t      // Activate the interval again when user releases down arrow.\r\n\t      if (keyCode === 40) {\r\n\t        setDropTime(1000 / (level + 1) + 200);\r\n\t      }\r\n\t    }\r\n\t};\t\r\n\r\n\tconst startGame = () => {\r\n\t\t//Reset Game\r\n\t\tsetStage(createStage());\r\n\t\tsetDropTime(1000);\r\n\t\tresetPlayer();\r\n\t\tsetScore(0);\r\n\t    setLevel(0);\r\n\t    setRows(0);\r\n\t\tsetGameOver(false);\r\n\t};\r\n\r\n\tconst drop = () => {\r\n\t\tif (rows > (level + 1) * 10) {\r\n\t      setLevel(prev => prev + 1);\r\n\t      setDropTime(1000 / (level + 1) + 200);\r\n\t    }\r\n\r\n\t\tif(!checkCollision(player, stage, { x: 0, y: 1})){\r\n\t\t\tupdatePlayerPos({ x: 0, y: 1, collided: false });\r\n\t\t}else{\r\n\t\t\tif(player.pos.y < 1){\r\n\t\t\t\tconsole.log(\"GAME OVER!\");\r\n\t\t\t\tsetGameOver(true);\r\n\t\t\t\tsetDropTime(null);\r\n\t\t\t}\r\n\t\t\tupdatePlayerPos({ x: 0, y: 0, collided: true });\r\n\t\t}\r\n\t};\r\n\r\n\tconst dropPlayer = () => {\r\n\t\tsetDropTime(null);\r\n\t\tdrop();\r\n\t};\r\n\r\n\tuseInterval(() => {\r\n\t    drop();\r\n\t  }, dropTime);\r\n\r\n\tconst move = ({ keyCode }) => {\r\n\t\tif(!gameOver){\r\n\t\t\tif(keyCode === 37){\r\n\t\t\t\tmovePlayer(-1);\r\n\t\t\t}else if(keyCode === 39){\r\n\t\t\t\tmovePlayer(1);\r\n\t\t\t}else if(keyCode === 40){\r\n\t\t\t\tdropPlayer();\r\n\t\t\t}else if(keyCode === 38){\r\n\t\t\t\tplayerRotate(stage, 1);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\r\n\treturn (\r\n\t\t<StyledTetrisWrapper \r\n\t\t\trole = \"button\" \r\n\t\t\ttabIndex = \"0\" \r\n\t\t\tonKeyDown = {e => move(e)}\r\n\t\t\tonKeyUp = {keyUp}\r\n\t\t>\r\n\t\t\t<StyledTetris>\r\n\t\t\t\t<Stage stage = {stage} />\r\n\t\t\t\t<aside>\r\n\t\t\t\t  \t{gameOver ? (\r\n\t\t\t\t  \t\t<Display gameOver= {gameOver} text= \"Game Over\" />\r\n\t\t\t\t  \t) : (\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<Display text = {`Score: ${score}`} />\r\n\t\t\t\t\t\t\t<Display text = {`Rows: ${rows}`} />\r\n\t\t\t\t\t\t\t<Display text = {`Level: ${level}`} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t  \t)}\t\r\n\t\t\t\t\t<StartButton callback = {startGame} />\r\n\t\t\t\t</aside>\r\n\t\t\t</StyledTetris>\r\n\t\t</StyledTetrisWrapper>\t\t\t\r\n\t);\r\n};\r\n\r\nexport default Tetris;","import { useState, useCallback } from 'react';\r\nimport { TETROMINOS, randomTetromino } from '../tetrominos.js';\r\nimport { STAGE_WIDTH, checkCollision } from '../gameHelpers.js';\r\n\r\nexport const usePlayer = () => {\r\n\tconst [player, setPlayer] = useState({\r\n\t\tpos: { x:0, y:0 },\r\n\t\ttetromino: TETROMINOS[0].shape,\r\n\t\tcollided: false,\r\n\t});\r\n\r\n\tconst rotate = (matrix, dir) => {\r\n\t    const rotatedTetro = matrix.map((_, index) =>\r\n\t     matrix.map(col => col[index]),\r\n\t     );\r\n\r\n\t    if (dir > 0) return rotatedTetro.map(row => row.reverse());\r\n\t    return rotatedTetro.reverse();\r\n\t};\r\n\r\n\tconst playerRotate = (stage, dir) => {\r\n\t\tconst clonedPlayer = JSON.parse(JSON.stringify(player));\r\n    \tclonedPlayer.tetromino = rotate(clonedPlayer.tetromino, dir);\r\n\r\n    \tconst pos = clonedPlayer.pos.x;\r\n\t    let offset = 1;\r\n\t    while (checkCollision(clonedPlayer, stage, { x: 0, y: 0 })) {\r\n\t      clonedPlayer.pos.x += offset;\r\n\t      offset = -(offset + (offset > 0 ? 1 : -1));\r\n\t      if (offset > clonedPlayer.tetromino[0].length) {\r\n\t        rotate(clonedPlayer.tetromino, -dir);\r\n\t        clonedPlayer.pos.x = pos;\r\n\t        return;\r\n\t      }\r\n\t    }\r\n    \t\r\n    \tsetPlayer(clonedPlayer);\r\n\t}\r\n\r\n\r\n\tconst updatePlayerPos = ({ x, y, collided}) => {\r\n\t\tsetPlayer(prev => ({\r\n\t\t\t...prev,\r\n\t\t\tpos: { x: (prev.pos.x += x), y: (prev.pos.y += y)},\r\n\t\t\tcollided,\r\n\t\t}));\r\n\t};\r\n\r\n\tconst resetPlayer = useCallback(() => {\r\n\t\tsetPlayer({\r\n\t\t\tpos: { x: STAGE_WIDTH / 2 - 2, y: 0},\r\n\t\t\ttetromino: randomTetromino().shape,\r\n\t\t\tcollided: false,\r\n\t\t});\r\n\t}, []);\r\n\r\n\treturn [player, updatePlayerPos, resetPlayer, playerRotate];\r\n};","import { useEffect, useRef } from 'react';\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef();\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      const id = setInterval(tick, delay);\n      return () => {\n        clearInterval(id);\n      };\n    }\n  }, [delay]);\n}\n","import React from 'react';\nimport Tetris from './components/Tetris.js';\n\nconst App = () => (\n  <div className = \"App\">\n  \t<h2><center>Welcome to Tetris Game!</center></h2>\n  \t<h3><center>Created by: <a href = \"https://dhritisaha.netlify.app\">Dhriti Saha</a></center></h3>\n    <Tetris />\n  </div>  \n);\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}